<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd ">

    <context:component-scan base-package="com.xbb.mapper">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--    引入数据库配置文件   -->
    <context:property-placeholder location="classpath:*.properties"/>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!--    c3p0连接池私有属性    -->
        <property name="maxPoolSize" value="300" />
        <property name="minPoolSize" value="20" />
        <!--    是否自动commit（提交），false：关闭  -->
        <property name="autoCommitOnClose" value="false" />
        <!--    获取连接超时时间    -->
        <property name="checkoutTimeout" value="100000" />
        <!--    当获取连接失败重试次数   -->
        <property name="acquireRetryAttempts" value="2" />
    </bean>

    <!--    整合mybatis   -->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:com/xbb/mapper/**/*.xml"/>
        <property name="configuration">
            <!--    mybatis的配置在这里填写     -->
            <bean class="org.apache.ibatis.session.Configuration">
                <!--    转换驼峰命名  -->
                <property name="mapUnderscoreToCamelCase" value="true"/>
            </bean>
        </property>
        <!-- 插件配置 -->
        <property name="plugins">
            <array>
                <!--    分页插件配置，拦截器实现分页功能    -->
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=mysql <!--指定数据库-->
                            reasonable=true
                            supportMethodsArguments=true
                            params=count=countSql
                            autoRuntimeDialect=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!--    持久层接口   -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.xbb.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>
    </bean>

    <!--    事务管理    -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--    事务管理的策略 transaction-manager：指向上面的transactionManager -->
    <tx:advice transaction-manager="transactionManager" id="transactionAdvice">
        <!--    事务处理的相关值以及传播性   -->
        <tx:attributes>
            <!--    read-only：设置为只读 -->
            <tx:method name="select*" read-only="true"/>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="delete*" propagation="REQUIRED"
                       no-rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED"
                       no-rollback-for="Exception"/>
            <tx:method name="insert*" propagation="REQUIRED"
                       no-rollback-for="Exception"/>
            <tx:method name="add*" propagation="REQUIRED"
                       no-rollback-for="Exception"/>
        </tx:attributes>
    </tx:advice>

    <!--    AOP切面    -->
    <aop:config>
        <aop:pointcut id="txCut" expression="execution(* com.xbb.service..*.*(..))"/>
        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="txCut"/>
    </aop:config>

    <!--    采用注解进行事务配置，在Service的实现类上加上@Transanctional注解 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>
